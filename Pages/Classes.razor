@page "/"
@page "/classes"
@using cam.Models
@using cam.Services
@inject NavigationManager NavigationManager
@inject IRoomService roomRepo
@inject IClassService classRepo

<section class="grid-container">
    @foreach(var c in classes)
    {
        <ClassCard Class="@c" OnDragStart="DragStart" Dragged="@Dragged" OnRemoveClass="@RemoveClass"/>
    }

    <div class="grid-25 mobile-grid-100 tablet-grid-50 suffix-75 card-fluid">
        <div class="card-body">
            <h2 class="title-1">Add Class</h2>
            <EditForm Model="@cl" OnValidSubmit="SaveClass">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
            <label class="label-1" for="name">Class Name<small>*</small></label>
            <input type="text" id="name" required @bind="cl.Name">

            <label class="label-1" for="time">Class Time<small>*</small></label>
            <select type="text" id="time" required @bind="cl.Time">
                <option>Select...</option>
                @foreach (var t in classTimes)
                {
                    <option value=@t>@t</option>
                }
            </select>

            <label class="label-1" for="cbook">Course Book<small>*</small></label>
            <select type="text" id="cbook" required @bind="cl.CourseBook">
                <option>Select...</option>
                @foreach (var cbook in cBooks)
                {
                    <option value=@cbook>@cbook</option>
                }
            </select>
            
            <label class="label-1" for="gbook">Grammar Book<small>*</small></label>
            <select type="text" id="gbook" required @bind="cl.GrammarBook">
                <option>Select...</option>
                @foreach (var gbook in gBooks)
                {
                    <option value=@gbook>@gbook</option>
                }
            </select>

            <label class="label-1" for="room">Room<small>*</small></label>
            <select type="text" id="room" required @bind="cl.RoomId">
                <option>Select...</option>
                @foreach (var room in rooms)
                {
                    <option value=@room.Id>@room.Name</option>
                }
            </select>

            <button type="submit" class="submit-btn">
                    Add
            </button>
            </EditForm>
        </div>
    </div>
</section>


@code
{
    Student Dragged {get; set;} = new Student();
    List<string> classTimes = new List<string>(){ "2:00", "3:40", "5:10"};
    List<string> cBooks = new List<string>(){ "Get Smart", "Top Stars", "Young Stars", "Jumper", "Skipper", "Runner", "Bridge", "The Class"};
    List<string> gBooks = new List<string>(){ "Smart Grammar", "Best Grammar", "3800ìž¬"};
    List<Room> rooms = new List<Room>();
    List<Student> students = new List<Student>();
    List<Class> classes = new List<Class>();

    
    Class cl = new Class();
    protected override async Task OnInitializedAsync()
    {
        rooms = await roomRepo.Get();
        StateHasChanged();
        classes = await classRepo.Get();
        StateHasChanged();
    }
    

    private async void SaveClass()
    {
        await classRepo.Insert(cl);
        classes = await classRepo.Get();
        cl = new Class();
        StateHasChanged();
    }

    private async void RemoveClass(Class @class)
    {
        await classRepo.Remove(@class);
        classes.Remove(@class);
        StateHasChanged();
    }

    void DragStart(Student student)
    {
        Dragged = student;
    }
}