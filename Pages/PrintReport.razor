@page "/printreport/{reportId}"
@layout PrintLayout
@using cam.Models
@using cam.Services
@inject IStudentService studentRepo
@inject IReportService reportRepo
@inject INotificationsService notificationRepo

<div>
    <button onclick="window.print()" class="submit-btn" style="margin: 1rem auto;">Print</button>
</div>
<div class="printable">
    <img class="cam-logo-print" src="/img/cam-logo.png" height="100px">
    <h1>Cambridge English</h1>
    <h3>@report.Period</h3>
    <h2>@student.EnglishName - @student.KoreanName</h2>
    <table>
        <caption class="title-1">Scores</caption>
        <thead>
            <tr>
                <th width=20%></th>
                <th width=10%><i class="fas fa-poll-h fa-2x"></i></th>
                <th width=12%> <small>Attitude</small> </th>
                <th width=12%> <small>Homework</small> </th>
                <th > <small>Comment</small> </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Course Book</td>
                <td>@report.CourseScore%</td>
                <td rowspan="3">@for(int i=0;i<report.Attitude;i++){ <label>⭐</label>}</td>
                <td rowspan="3">@for(int i=0;i<report.Homework;i++){ <label>⭐</label>}</td>
                <td rowspan="3" class="comment-wrap"><textarea class="comment-box" value="@report.Comment"></textarea></td>
            </tr>
            <tr>
                <td>Grammar</td>
                <td>@report.GrammarScore%</td>
            </tr>
            <tr>
                <td>ELT</td>
                <td>@report.EltScore%</td>
            </tr>
        </tbody>
    </table>

    <h3 class="title-1">Notification:</h3>
    <textarea class="notification-box">
        @notificationContent
    </textarea>

</div>

@code
{
    [Parameter]
    public string reportId { get; set; }
    public Student student = new Student();
    public Models.Report report = new Models.Report();
    public Notification Notification = new Notification();

    string notificationContent = "No notifications found ...";

     protected override async Task OnInitializedAsync()
    {

        report = await reportRepo.Get(reportId);
        student = await studentRepo.Get(report.StudentId);
        Notification = await notificationRepo.Get(report.Period);
        if(Notification != null)
            notificationContent = Notification.Content.TrimStart();
        StateHasChanged();
    }
}
