@page "/report/{ClassId}"
@using cam.Models
@using cam.Services
@inject NavigationManager NavigationManager
@inject IClassService classRepo
@inject IStudentService studentRepo
@inject IReportService reportRepo

<section class="">
    <div class="page-body"> 
        <div class="table-wrapper card">
            <label class="label-1" for="period">Select the period<small>*</small></label>
            <select type="text" id="period" required @bind="period">
                <option >Select...</option>
                <option value="@String.Format("{0:MMM} {1}", DateTime.Now.AddMonths(-1), DateTime.Now.Year)">@DateTime.Now.AddMonths(-1).ToString("MMMM")</option>
                <option value="@String.Format("{0:MMM} {1}", DateTime.Now, DateTime.Now.Year)">@DateTime.Now.ToString("MMMM")</option>
                <option value="@String.Format("{0:MMM} {1}", DateTime.Now.AddMonths(1), DateTime.Now.Year)">@DateTime.Now.AddMonths(1).ToString("MMMM")</option>
            </select>

            <h3 class="title-1" width="100%">@_class.Name</h3>

            <table width=100%>
                <thead>
                    <tr>
                        <th width=10% scope="col">Name</th>
                        <th width=5% scope="col" >crs </th>
                        <th width=5% scope="col" >grm</th>
                        <th width=5% scope="col" >elt</th>
                        <th width=5% scope="col" >att</th>
                        <th width=5% scope="col" >hwk</th>
                        <th width=25% scope="col">Comment</th>
                        <th width=3% scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in students)
                    {
                        <StudentReportRow Student="@student" Period="@period"/>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>



@code{

    [Parameter]
    public string ClassId { get; set; }
    string period = "";
    Class _class = new Class();
    List<Student> students = new List<Student>();

    protected override async Task OnInitializedAsync()
    {
        _class = await classRepo.Get(ClassId);
        
        students = (await studentRepo.Get()).Where(s => s.ClassId == ClassId).ToList();
        StateHasChanged();
    }
}