@page "/report/{ClassId}"
@using cam.Models
@using cam.Services
@inject NavigationManager NavigationManager
@inject IClassService classRepo
@inject IStudentService studentRepo
@inject IReportService reportRepo

<section class="">
    <EditForm Model="@reports" OnValidSubmit="SaveReports" class="page-body"> 
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="table-wrapper card">
            <label class="label-1" for="period">Select the period<small>*</small></label>
            <select type="text" id="period" required @bind="period">
                <option >Select...</option>
                <option value="@String.Format("{0:MMM} {1}", DateTime.Now.AddMonths(-1), DateTime.Now.Year)">@DateTime.Now.AddMonths(-1).ToString("MMMM")</option>
                <option value="@String.Format("{0:MMM} {1}", DateTime.Now, DateTime.Now.Year)">@DateTime.Now.ToString("MMMM")</option>
                <option value="@String.Format("{0:MMM} {1}", DateTime.Now.AddMonths(1), DateTime.Now.Year)">@DateTime.Now.AddMonths(1).ToString("MMMM")</option>
            </select>
            <table width=100%>
                <caption class="title-1">@_class.Name</caption>
                <thead>
                    <tr>
                        <th width=15% scope="col">Name</th>
                        <th width=10% scope="col">Course </th>
                        <th width=10% scope="col">Grammar</th>
                        <th width=10% scope="col">ELT Score</th>
                        <th width=25% scope="col">Comment</th>
                    </tr>
                </thead>
                <tbody>
                    @for(int i = 0; i < reports.Count; i++)
                    {

                        var iCopy = i;
                        <tr>
                            <td data-label="@students[i].EnglishName">@students[i].EnglishName</td>
                            <td data-label="@students[i].EnglishName-@_class.CourseBook">
                                
                                <input type="numeric" id="@students[i].EnglishName-@_class.CourseBook" required value="@reports[i].CourseScore" max="100" min="0"
                                                                                                                @onchange="@(e => reports[iCopy].CourseScore = Int32.Parse(e.Value.ToString()))">
                            </td>
                            <td data-label="@students[i].EnglishName-@_class.GrammarBook">
                                <input type="numeric" id="@students[i].EnglishName-@_class.GrammarBook" required value="@reports[i].GrammarScore" max="100" min="0"
                                                                                                                @onchange="@(e => reports[iCopy].GrammarScore = Int32.Parse(e.Value.ToString()))">
                            </td>
                            <td data-label="@students[i].EnglishName-Elt">
                                <input type="numeric" id="@students[i].EnglishName-Elt" required value="@reports[i].EltScore" max="100" min="0"
                                                                                                    @onchange="@(e => reports[iCopy].EltScore = Int32.Parse(e.Value.ToString()))">
                            </td>
                            <td data-label="@students[i].EnglishName-comment">
                                <textarea class="textarea-comment" rows="3" id="@students[i].EnglishName-comment" value="@reports[i].Comment"
                                                                                                                    @onchange="@(e => reports[iCopy].Comment = e.Value.ToString())"/>
                            </td>
                        </tr>
                        reports[i].StudentId = students[i].Id;
                        reports[i].Period = period;
                    }
                </tbody>
            </table>
            <button type="submit" class="submit-btn">
                Generate Reports
            </button>
        </div>
    </EditForm>
</section>



@code{

    [Parameter]
    public string ClassId { get; set; }

    string period = "June 2020";

    Class _class = new Class();

    List<Models.Report> reports = new List<Models.Report>();

    List<Student> students = new List<Student>();

    protected override async Task OnInitializedAsync()
    {
        _class = await classRepo.Get(ClassId);
        StateHasChanged();
        students = (await studentRepo.Get()).Where(s=>s.ClassId == ClassId).ToList();
        reports.AddRange(Enumerable.Repeat(new Models.Report(), students.Count));
        StateHasChanged();
    }

    async void SaveReports()
    {
        await reportRepo.InsertMany(reports);
        NavigationManager.NavigateTo("/reports");
    }
}